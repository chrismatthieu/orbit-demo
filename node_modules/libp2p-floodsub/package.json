{
  "_from": "github:libp2p/js-libp2p-floodsub#orbit-floodsub",
  "_id": "libp2p-floodsub@0.7.4",
  "_inBundle": false,
  "_integrity": "sha1-d2tu78H/Us5W8jZOiBBRyKP/Jng=",
  "_location": "/libp2p-floodsub",
  "_phantomChildren": {},
  "_requested": {
    "type": "git",
    "raw": "libp2p-floodsub@github:libp2p/js-libp2p-floodsub#orbit-floodsub",
    "name": "libp2p-floodsub",
    "escapedName": "libp2p-floodsub",
    "rawSpec": "github:libp2p/js-libp2p-floodsub#orbit-floodsub",
    "saveSpec": "github:libp2p/js-libp2p-floodsub#orbit-floodsub",
    "fetchSpec": null,
    "gitCommittish": "orbit-floodsub"
  },
  "_requiredBy": [
    "/orbit-db"
  ],
  "_resolved": "github:libp2p/js-libp2p-floodsub#8d2ee5bda953fd0433798e432cb70c13741fd404",
  "_spec": "libp2p-floodsub@github:libp2p/js-libp2p-floodsub#orbit-floodsub",
  "_where": "/Users/topher/Projects/computes/orbit-status/node_modules/orbit-db",
  "author": {
    "name": "David Dias",
    "email": "daviddias@ipfs.io"
  },
  "bugs": {
    "url": "https://github.com/libp2p/js-libp2p-floodsub/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Dmitriy Ryajov",
      "email": "dryajov@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Gavin McDermott",
      "email": "gavinmcdermott@gmail.com"
    },
    {
      "name": "Haad",
      "email": "haadcode@users.noreply.github.com"
    },
    {
      "name": "greenkeeper[bot]",
      "email": "greenkeeper[bot]@users.noreply.github.com"
    }
  ],
  "dependencies": {
    "debug": "^2.6.0",
    "hashlru": "^2.0.0",
    "length-prefixed-stream": "^1.5.1",
    "libp2p-crypto": "~0.8.1",
    "lodash.values": "^4.3.0",
    "pull-pushable": "^2.0.1",
    "time-cache": "~0.3.0"
  },
  "deprecated": false,
  "description": "libp2p-floodsub, also known as pubsub-flood or just dumbsub, this implementation of pubsub focused on delivering an API for Publish/Subscribe, but with no CastTree Forming (it just floods the network).",
  "devDependencies": {
    "aegir": "^10.0.0",
    "async": "^2.1.4",
    "benchmark": "^2.1.3",
    "chai": "^3.5.0",
    "gulp": "^3.9.1",
    "libp2p-ipfs-nodejs": "~0.18.2",
    "lodash.times": "^4.3.2",
    "multiaddr": "^2.2.1",
    "peer-id": "~0.8.2",
    "peer-info": "~0.8.3",
    "pre-commit": "^1.2.2"
  },
  "homepage": "https://github.com/libp2p/js-libp2p-floodsub#readme",
  "keywords": [
    "IPFS",
    "libp2p",
    "pubsub",
    "gossip",
    "flood",
    "flooding"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "libp2p-floodsub",
  "pre-commit": [
    "lint",
    "test"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/libp2p/js-libp2p-floodsub.git"
  },
  "scripts": {
    "build": "gulp build",
    "coverage": "gulp coverage",
    "coverage-publish": "aegir-coverage publish",
    "docs": "aegir-docs",
    "lint": "aegir-lint",
    "release": "gulp release --docs",
    "release-major": "gulp release --type major --docs",
    "release-minor": "gulp release --type minor --docs",
    "test": "gulp test",
    "test:browser": "gulp test:browser",
    "test:node": "gulp test:node",
    "test:node:cli": "TEST=cli npm run test:node",
    "test:node:core": "TEST=core npm run test:node",
    "test:node:http": "TEST=http npm run test:node"
  },
  "version": "0.7.4"
}
